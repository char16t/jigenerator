expr   := term[a] *((PLUS[c] | MINUS[c]) term[b]);

term  := factor[d] *((MUL[e] | DIV[e]) factor[f]);
factor := (PLUS | MINUS) factor;
factor := INTEGER;
factor := LPAREN expr RPAREN;

PLUS := '+';
MINUS := '-';
MUL := '*';
DIV := '/';
EQ := ':=';
LPAREN := '(';
RPAREN := ')';
INTEGER := ('0'|'1'|'2'|'3'|'4'|'5'|'6'|'7'|'8'|'9') *('0'|'1'|'2'|'3'|'4'|'5'|'6'|'7'|'8'|'9');

@BinaryOp(2);
@UnaryOp(1);
@Num(0);