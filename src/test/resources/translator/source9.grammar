expr   := term[a] *((PLUS[b] | MINUS[b]) term[c] #BinOp(a, b, c)[a]) $a;
term   := factor[d] *((MUL[e] | DIV[e]) factor[f] #BinOp(d, e, f)[d]) $d;
factor := (PLUS[a] | MINUS[a]) factor[b] #UnaryOp(a,b)[c] $c;
factor := INTEGER[d] #Num(d)[e] $e;
factor := LPAREN expr[f] RPAREN $f;

PLUS := '+';
MINUS := '-';
MUL := '*';
DIV := '/';
EQ := ':=';
LPAREN := '(';
RPAREN := ')';
INTEGER := ('0'|'1'|'2'|'3'|'4'|'5'|'6'|'7'|'8'|'9') *('0'|'1'|'2'|'3'|'4'|'5'|'6'|'7'|'8'|'9');

@BinOp(%n, %t, %n);
@UnaryOp(%t, %n);
@Num(%t);